- need to add multiprocessing to split fastapi vs RL stuffz on server side. CAREFUL currently we are running uvicorn as external command pointing to that main.py class. We'll need to run regular python and execute uvicorn from within (in a thread) instead. i.e import uvicorn as python library and run api there. see [this](https://www.uvicorn.org/#running-programmatically) (https://github.com/tiangolo/fastapi/issues/650)
- if the deque is the shared var that allows RL to access teh api data, we need to make another shared var for the api to read RL commands btw. difference design cause this time we want that data to be sent from api ASAP. Observer pattern comes to mind, how do we do that between threads? without a whole like actual message queue service? (uh oh https://melvinkoh.me/solving-producerconsumer-problem-of-concurrent-programming-in-python-ck3bqyj1j00i8o4s1cqu9mfi7)

